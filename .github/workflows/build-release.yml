name: Build Releases
on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker images
        run: |
          cd build
          docker build -t shadowsocks-rust:x86_64-pc-windows-gnu -f Dockerfile.x86_64-pc-windows-gnu .
          docker build -t shadowsocks-rust:x86_64-unknown-linux-musl -f Dockerfile.x86_64-unknown-linux-musl .
          docker build -t shadowsocks-rust:x86_64-unknown-linux-gnu -f Dockerfile.x86_64-unknown-linux-gnu .
          docker build -t shadowsocks-rust:arm-unknown-linux-gnueabihf -f Dockerfile.arm-unknown-linux-gnueabihf .
          docker build -t shadowsocks-rust:aarch64-unknown-linux-gnu -f Dockerfile.aarch64-unknown-linux-gnu .
          docker build -t shadowsocks-rust:mips-unknown-linux-musl -f Dockerfile.mips-unknown-linux-musl .
          docker build -t shadowsocks-rust:mipsel-unknown-linux-musl -f Dockerfile.mipsel-unknown-linux-musl .
      - name: Install cross
        run: cargo install cross
      - name: Build releases
        timeout-minutes: 120
        run: |
          cd build
          ./build-release
      - uses: actions/upload-artifact@v2
        with:
          name: releases
          path: build/release/*

  build-unix:
    runs-on: ${{ matrix.os }}
    env:
      BUILD_EXTRA_FEATURES: ${{ matrix.extra-features }}
      RUSTFLAGS: "-Ctarget-feature=+aes,+ssse3"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            extra-features: openssl-vendored local-redir
          - os: macos-latest
            extra-features: openssl-vendored local-redir
    steps:
      - uses: actions/checkout@v2
      - name: Build release
        shell: bash
        run: ./build-host-release
      - uses: actions/upload-artifact@v2
        with:
          name: releases
          path: build/release/*

  build-windows:
    runs-on: windows-latest
    env:
      OPENSSL_STATIC: 1
      OPENSSL_DIR: "C:\\Program Files\\OpenSSL-Win64\\"
      RUSTFLAGS: "-Ctarget-feature=+aes,+ssse3"
    steps:
      - uses: actions/checkout@v2
      - name: setup (windows)
        run: choco install openssl
      - name: Build release
        shell: bash
        run: ./build-host-release
      - uses: actions/upload-artifact@v2
        with:
          name: releases
          path: build/release/*
