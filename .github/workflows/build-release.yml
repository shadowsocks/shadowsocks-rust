name: Build Releases
on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always

jobs:
  build-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-gnu
          - x86_64-unknown-linux-musl
          - x86_64-unknown-linux-gnu
          - arm-unknown-linux-gnueabihf
          - arm-unknown-linux-musleabi
          - aarch64-unknown-linux-gnu
          - mips-unknown-linux-musl
          - mipsel-unknown-linux-musl

    steps:
      - uses: actions/checkout@v2

      - name: Install cross
        run: cargo install cross

      - name: Build ${{ matrix.target }}
        timeout-minutes: 120
        run: |
          cd build
          docker build -t shadowsocks-rust:${{ matrix.target }} -f Dockerfile.${{ matrix.target }} .
          ./build-release -t ${{ matrix.target }}

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/release/*
          prerelease: ${{ contains(github.ref, '-') }}

  build-unix:
    runs-on: ${{ matrix.os }}
    env:
      BUILD_EXTRA_FEATURES: "openssl-vendored local-redir"
      RUSTFLAGS: "-Ctarget-feature=+aes,+ssse3"
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest]
        os: [macos-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Build release
        shell: bash
        run: |
          cd build
          ./build-host-release

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/release/*
          prerelease: ${{ contains(github.ref, '-') }}

  build-windows:
    runs-on: windows-latest
    env:
      RUSTFLAGS: "-Ctarget-feature=+aes,+ssse3,+crt-static"
    # env:
    #   OPENSSL_STATIC: "1"
    #   OPENSSL_DIR: "C:\\Program Files\\OpenSSL-Win64\\"
    steps:
      - uses: actions/checkout@v2

      - name: Build release
        run: |
          cd build
          pwsh build-host-release.ps1

      - name: Upload Github Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/release/*
          prerelease: ${{ contains(github.ref, '-') }}
