name: Build & Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always
  RUST_LOG: "trace"

jobs:
  buid-test-check:
    strategy:
      matrix:
        platform:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: clippy
          default: true
          override: true
      - name: Build & Test (Default)
        run: cargo test --verbose --no-fail-fast
      - name: Build & Test (Default) - shadowsocks
        run: cargo test --manifest-path ./crates/shadowsocks/Cargo.toml --verbose --no-fail-fast
      - name: Build & Test (--no-default-features)
        run: cargo test --verbose --no-default-features --no-fail-fast
      - name: Build & Test (--no-default-features) - shadowsocks
        run: cargo test --manifest-path ./crates/shadowsocks/Cargo.toml --verbose --no-default-features --no-fail-fast
      - name: Build with All Features Enabled (Unix)
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: cargo build --verbose --features "local-http-rustls local-redir local-dns local-tun dns-over-tls dns-over-https stream-cipher aead-cipher-2022"
      - name: Build with All Features Enabled (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: cargo build --verbose --features "local-http-rustls local-dns dns-over-tls dns-over-https stream-cipher aead-cipher-2022"
      - name: Build with All Features Enabled - shadowsocks
        run: cargo build --manifest-path ./crates/shadowsocks/Cargo.toml --verbose --features "stream-cipher aead-cipher-2022"
      - name: Clippy Check
        uses: actions-rs/clippy-check@v1
        with:
          name: clippy-${{ matrix.platform }}
          token: ${{ secrets.GITHUB_TOKEN }}
          args: |
            --features "local-http-rustls local-redir local-dns dns-over-tls dns-over-https stream-cipher aead-cipher-2022" -- -Z macro-backtrace
            -W clippy::absurd_extreme_comparisons
            -W clippy::erasing_op
            -A clippy::collapsible_else_if
      # - name: prepare AppleSilicon build
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     target: aarch64-apple-darwin
      #     toolchain: nightly
      #   if: runner.os == 'macOS'

      # # https://github.com/actions/virtual-environments/issues/2557#issuecomment-769611326
      # - if: runner.os == 'macOS'
      #   run: |
      #     sudo xcode-select -s /Applications/Xcode_12.4.app &&
      #     sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*

      # - name: Check compilation for Apple Silicon
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: check
      #     args: --target aarch64-apple-darwin
      #   if: runner.os == 'macOS'
